name: Docker CD

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VM_IP: ${{ secrets.VM_IP }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VM_IP }} >> ~/.ssh/known_hosts

      - name: Copy files to VM
        run: |
          scp -r app/ requirements.txt Dockerfile azureuser@$VM_IP:~/

      - name: Deploy to Azure VM
        run: |
          ssh azureuser@$VM_IP "
            echo 'Current directory contents:'
            ls -la
            
            echo 'Stopping existing container...'
            docker stop flask-app || true
            docker rm flask-app || true
            
            echo 'Building new image...'
            docker build -t flask-app:latest .
            
            echo 'Starting container...'
            docker run -d \
              --name flask-app \
              -p 8080:8080 \
              flask-app:latest
            
            echo 'Container status:'
            docker ps
            docker logs flask-app
          "

      - name: Health check
        run: |
          echo "Waiting for service startup..."
          sleep 30
          curl http://${{ secrets.VM_IP }}:8080